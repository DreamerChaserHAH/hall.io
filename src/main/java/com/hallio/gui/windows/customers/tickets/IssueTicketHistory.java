/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.hallio.gui.windows.customers.tickets;

import com.hallio.tms.Issue;
import com.hallio.tms.TicketManager;

import javax.swing.*;

/**
 *
 * @author ethan
 */
public class IssueTicketHistory extends javax.swing.JFrame {

    /**
     * Creates new form IssueTicketHistory
     */
    public IssueTicketHistory() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        createIssueButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewIssueButton = new javax.swing.JButton();

        DefaultListModel<String> tickets;
        tickets = new DefaultListModel<>();
        Issue[] issueArray = new Issue[0];
        try {
            issueArray = TicketManager.getAllTickets();
        } catch (Exception e) {
            e.printStackTrace();
        }

        for(Issue issue: issueArray){
            tickets.addElement("Issue "+issue.getId()+": "+issue.getShortDescription() + "(" + issue.getStatus().toString() + ")");
        }
        IssueList = new javax.swing.JList<String>(tickets);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title.setText("Your Issues");

        createIssueButton.setText("+ New");

        createIssueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new IssueTicketCreation().setVisible(true);
                createIssueButtonActionPerformed(evt);
            }
        });
        IssueList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51)));
        jScrollPane1.setViewportView(IssueList);

        viewIssueButton.setText("View");
        Issue[] finalIssueArray = issueArray;
        viewIssueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Issue issue = finalIssueArray[IssueList.getSelectedIndex()];
                new IssueTicketConversation(issue).setVisible(true);
                viewIssueButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(createIssueButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(viewIssueButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Title)
                    .addComponent(createIssueButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewIssueButton)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createIssueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewIssueButtonActionPerformed
        // TODO add your handling code here:
        // Open the issueTicketConversationWindow about a specific Ticket
        this.dispose();
    }//

    private void viewIssueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewIssueButtonActionPerformed
        // TODO add your handling code here:
        // Open the issueTicketConversationWindow about a specific Ticket
    }//GEN-LAST:event_viewIssueButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IssueTicketHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IssueTicketHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IssueTicketHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssueTicketHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IssueTicketHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> IssueList;
    private javax.swing.JLabel Title;
    private javax.swing.JButton createIssueButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewIssueButton;
    // End of variables declaration//GEN-END:variables
}
